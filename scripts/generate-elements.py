# This script generates the file "atompack/elements.py"

symbols = [
    "H",
    "He",
    "Li",
    "Be",
    "B",
    "C",
    "N",
    "O",
    "F",
    "Ne",
    "Na",
    "Mg",
    "Al",
    "Si",
    "P",
    "S",
    "Cl",
    "Ar",
    "K",
    "Ca",
    "Sc",
    "Ti",
    "V",
    "Cr",
    "Mn",
    "Fe",
    "Co",
    "Ni",
    "Cu",
    "Zn",
    "Ga",
    "Ge",
    "As",
    "Se",
    "Br",
    "Kr",
    "Rb",
    "Sr",
    "Y",
    "Zr",
    "Nb",
    "Mo",
    "Tc",
    "Ru",
    "Rh",
    "Pd",
    "Ag",
    "Cd",
    "In",
    "Sn",
    "Sb",
    "Te",
    "I",
    "Xe",
    "Cs",
    "Ba",
    "La",
    "Ce",
    "Pr",
    "Nd",
    "Pm",
    "Sm",
    "Eu",
    "Gd",
    "Tb",
    "Dy",
    "Ho",
    "Er",
    "Tm",
    "Yb",
    "Lu",
    "Hf",
    "Ta",
    "W",
    "Re",
    "Os",
    "Ir",
    "Pt",
    "Au",
    "Hg",
    "Tl",
    "Pb",
    "Bi",
    "Po",
    "At",
    "Rn",
    "Fr",
    "Ra",
    "Ac",
    "Th",
    "Pa",
    "U",
]
names = [
    "Hydrogen",
    "Helium",
    "Lithium",
    "Beryllium",
    "Boron",
    "Carbon",
    "Nitrogen",
    "Oxygen",
    "Fluorine",
    "Neon",
    "Sodium",
    "Magnesium",
    "Aluminum",
    "Silicon",
    "Phosphorus",
    "Sulfur",
    "Chlorine",
    "Argon",
    "Potassium",
    "Calcium",
    "Scanadium",
    "Titanium",
    "Vanadium",
    "Chromium",
    "Manganese",
    "Iron",
    "Cobalt",
    "Nickel",
    "Copper",
    "Zinc",
    "Gallium",
    "Germanium",
    "Arsenic",
    "Selenium",
    "Bromine",
    "Krypton",
    "Rubidium",
    "Strontium",
    "Yttrium",
    "Zirconium",
    "Niobium",
    "Molybdenum",
    "Technetium",
    "Ruthenium",
    "Rhodium",
    "Palladium",
    "Silver",
    "Cadmium",
    "Indium",
    "Tin",
    "Antimony",
    "Tellurium",
    "Iodine",
    "Xenon",
    "Caesium",
    "Barium",
    "Lanthanum",
    "Cerium",
    "Praseodymium",
    "Neodymium",
    "Promethium",
    "Samarium",
    "Europium",
    "Gadolinium",
    "Terbium",
    "Dysprosium",
    "Holmium",
    "Erbium",
    "Thulium",
    "Ytterbium",
    "Lutetium",
    "Hafnium",
    "Tantalum",
    "Tungsten",
    "Rhenium",
    "Osmium",
    "Iridium",
    "Platinum",
    "Gold",
    "Mercury",
    "Thallium",
    "Lead",
    "Bismuth",
    "Polonium",
    "Astatine",
    "Radon",
    "Francium",
    "Radium",
    "Actinium",
    "Thorium",
    "Protactinium",
    "Uranium",
]

with open("elements.py", "w") as f:
    code = "# this file was programatically generated by scripts/generate-elements.py\n"
    code += "# DO NOT EDIT MANUALLY\n\n"
    code += "class Element(object):\n"
    code += "\t\"\"\"Container to store metadata about an element.\"\"\"\n\n"
    code += "\tdef __init__(self, name: str, symbol: str, number: int, **kwargs) -> None:\n"
    code += "\t\tfor k, v in kwargs.items():\n"
    code += "\t\t\tsetattr(self, k, v)\n"
    code += "\t\tself._name = name\n"
    code += "\t\tself._symbol = symbol\n"
    code += "\t\tself._number = number\n\n"
    code += "\t@property\n"
    code += "\tdef name(self) -> str:\n"
    code += "\t\t\"\"\"Name of the element.\"\"\"\n"
    code += "\t\treturn self._name\n\n"
    code += "\t@property\n"
    code += "\tdef symbol(self) -> str:\n"
    code += "\t\t\"\"\"IUPAC chemical symbol.\"\"\"\n"
    code += "\t\treturn self._symbol\n\n"
    code += "\t@property\n"
    code += "\tdef number(self) -> int:\n"
    code += "\t\t\"\"\"Atomic number.\"\"\"\n"
    code += "\t\treturn self._number\n\n\n"
    for i, (symbol, name) in enumerate(zip(symbols, names)):
        code += "class {}(Element):\n".format(symbol)
        code += "\t\"\"\"{}.\"\"\"\n".format(name)
        code += "\tdef __init__(self, **kwargs) -> None:\n"
        code += "\t\tsuper().__init__('{}', '{}', {}, **kwargs)\n\n\n".format(name, symbol, i + 1)
    f.write(code)
